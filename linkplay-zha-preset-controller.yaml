# Blueprint metadata
blueprint:
  name: Linkplay Preset controller for ZHA
  description: |
    Select custom triggers to control pre-configured presets of a Linkplay media player.
    Currently supported controllers: IKEA Symfonisk
  source_url: https://raw.githubusercontent.com/smartlabs-sk/blueprint-templates/main/linkplay-zha-preset-controller.yaml
  domain: automation
  input:
    media_player:
      name: Linkplay Media player entity
      description: The entity of the Linkplay media player to be controlled.
      selector:
        entity:
          domain: media_player
    input_select:
      name: Preset helper selector
      description: A dropdown helper with the list of all presets for the media player.
      selector:
        entity:
          domain: input_select
    input_device_symfonisk:
      name: Symfonisk remote controller device
      description: The IKEA symfonisk remote controller
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: SYMFONISK Sound Controller
mode: restart
max_exceeded: silent
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input input_device_symfonisk
- platform: state
  entity_id: !input input_select
action:
- variables:
    command: '{% if trigger.event %}{{ trigger.event.data.command }}{% endif %}'
    cluster_id: '{% if trigger.event %}{{ trigger.event.data.cluster_id }}{% endif %}'
    endpoint_id: '{% if trigger.event %}{{ trigger.event.data.endpoint_id }}{% endif %}'
    args: '{% if trigger.event %}{{ trigger.event.data.args }}{% endif %}'
    media_player: !input media_player
    input_select: !input input_select
- choose:
  - conditions:
    - '{{ trigger.id == ''0'' }}'
    - '{{ command == ''stop'' }}'
    - '{{ cluster_id == 8 }}'
    - '{{ endpoint_id == 1 }}'
    sequence:
    - delay: 0.1
  - conditions:
    - '{{ trigger.id == ''1'' }}'
    sequence:
    - service: linkplay.preset
      data:
        entity_id: !input media_player
        preset: '{{ states[input_select].state }}'
  - conditions:
    - '{{ trigger.id == ''0'' }}'
    - '{{ command == ''toggle'' }}'
    - '{{ cluster_id == 6 }}'
    - '{{ endpoint_id == 1 }}'
    sequence:
      - wait_for_trigger:
        - platform: event
          event_type: zha_event
          event_data:
            device_id: !input input_device_symfonisk
            endpoint_id: 1
            cluster_id: 8
            command: 'toggle'
        timeout:
          milliseconds: 500
        continue_on_timeout: true
      - choose:
          - conditions:
              - condition: template
                value_template: '{{ states[media_player].state != "playing" }}'
            sequence:
              - service: linkplay.preset
                data:
                  entity_id: !input media_player
                  preset: '{{ states[input_select].state }}'
        default:
          - service: media_player.media_pause
            entity_id: !input media_player
  - conditions:
    - '{{ trigger.id == ''0'' }}'
    - '{{ command == ''step'' }}'
    - '{{ cluster_id == 8 }}'
    - '{{ endpoint_id == 1 }}'
    - '{{ args == [0, 1, 0] }}'
    sequence:
    - service: input_select.select_next
      entity_id: !input input_select
      data:
        cycle: true
    - service: linkplay.preset
      data:
        entity_id: '{{ media_player }}'
        preset: '{{ states[input_select].state }}'
  - conditions:
    - '{{ trigger.id == ''0'' }}'
    - '{{ command == ''step'' }}'
    - '{{ cluster_id == 8 }}'
    - '{{ endpoint_id == 1 }}'
    - '{{ args == [1, 1, 0] }}'
    sequence:
    - service: input_select.select_previous
      entity_id: !input input_select
      data:
        cycle: true 
    - service: linkplay.preset
      data:
        entity_id: '{{ media_player }}'
        preset: '{{ states[input_select].state }}'
  - conditions:
    - '{{ command == ''move'' }}'
    - '{{ cluster_id == 8 }}'
    - '{{ endpoint_id == 1 }}'
    - '{{ args == [0, 195] }}'
    sequence:
      repeat:
        while:
        - condition: template
          value_template: "{{ repeat.index < 10 }}"
        sequence:
        - service: media_player.volume_set
          entity_id: !input media_player
          data_template:
            volume_level: '{{ states[media_player].attributes.volume_level + 0.02 }}'
        - delay: 0.1
  - conditions:
    - '{{ command == ''move'' }}'
    - '{{ cluster_id == 8 }}'
    - '{{ endpoint_id == 1 }}'
    - '{{ args == [1, 195] }}'
    sequence:
      repeat:
        while:
        - condition: template
          value_template: "{{ repeat.index < 10 }}"
        sequence:
        - service: media_player.volume_set
          entity_id: !input media_player
          data_template:
            volume_level: '{{ states[media_player].attributes.volume_level - 0.02 }}'
        - delay: 0.1
